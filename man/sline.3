.TH SLINE 3 sline\-VERSION
.SH NAME
.PP
sline \- Get user input with simple line-editing and command history
.SH SYNOPSIS
.PP
.B #include <stddef.h>
.br
.B #include <sline.h>
.PP
.B int
.BI "sline(char *" buf , 
.BI "size_t " size );
.PP
.BI "extern int " sline_err ;
.SH DESCRIPTION
.PP
.BR sline ()
stores at most one character less than 
.I size
from standard input into
.I buf
by presenting the user a prompt 
("> ", by default) 
with line-editing capabilities
and also history browsing by means of the Up/Down arrow keys.
.PP
The caller subroutine should ensure the correct allocation of the
.I buf
string,
as well as ensure that its allocating size is equal or higher than
.IR size .
The string is guaranteed to be terminated by a null character.
.PP
To be able to use
.BR sline "(),"
.BR sline_setup (3)
must be called beforehand in order for the terminal to be set up properly
and memory resources to be allocated.
.PP
The default prompt can be changed by calling
.BR sline_set_prompt (3)
as many times as needed.
.PP
At exit, it is highly advisable to call
.BR sline_end (3)
to restore the terminal state 
and free all used memory. 
.SH RETURN VALUE
.BR sline ()
returns 0 if no error occurred. 
If an error did occur, 
a value less than 0 is returned and
.I sline_err
is set.
.SH ERRORS
.PP
On an error condition,
.BR sline ()
sets
.I sline_err
as follows:
.TP 
.B SLINE_ERR_EOF
EOF was reached.
.TP 
.B SLINE_ERR_IO
An unreadable character or escape sequence was found during I/O.
.PP
.BR sline_errmsg (3)
may be used to retrieve an error message string to be presented to the user.
.SH SEE ALSO
.BR sline_errmsg (3), sline_end (3), sline_setup (3), sline_set_prompt (3)
